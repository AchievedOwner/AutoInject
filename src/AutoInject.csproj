<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>William Chow</Authors>
    <PackageId>Mikpro.AutoInject</PackageId>
    <Product>Mikpro.AutoInject</Product>
    <Description>The extensions for Microsoft.Extensions.DependencyInjection witch can scan specify assemblies or types to inject into ServiceCollection automatically that has implemented from ITransient, IScoped or ISingleton.</Description>
    <Copyright>Copyright © William Chow 2019</Copyright>
    <RepositoryType>Github</RepositoryType>
    <PackageTags>Dependency Injection DI Services</PackageTags>
    <RepositoryUrl>https://github.com/Michael-Pro/AutoInject.git</RepositoryUrl>
    <PackageReleaseNotes>- [Add]`AddAutoInject` extensions method of `IServiceCollection` object.
- [Add]Resolve the service automatically while the instance implement from `ITransient`,`IScoped` or `ISingleton`.</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OutputPath>bin\Debug</OutputPath>
    <DocumentationFile>bin\Debug\AutoInject.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OutputPath>bin\Release</OutputPath>
    <DocumentationFile>bin\Release\AutoInject.xml</DocumentationFile>
    <FileAlignment>2048</FileAlignment>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.0.0" />
  </ItemGroup>
</Project>
